{"mappings":"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","sources":["index.js"],"sourcesContent":["import './src/scss/main.scss';\r\n// Function\r\nfunction capitalizeLetters(str) {\r\n    let local;\r\n    if(str.includes(\"-\")){\r\n        local = str.split(\"-\");\r\n    }else{\r\n        local = str.split(\" \");\r\n    }\r\n\r\n    for(let i in local){\r\n        local[i] = local[i][0].toUpperCase() + local[i].substring(1);\r\n    }\r\n\r\n    return local.join(\" \");\r\n}\r\n\r\nfunction typeSplit(types) {\r\n    return types.map((value) => value.type.name);\r\n}\r\n\r\nasync function typeWriter(part1, part2) {\r\n    let local1 = part1.split(\"\");\r\n    let local2 = part2.split(\"\");\r\n\r\n    document.getElementById(\"battleText1\").innerHTML = \"\";\r\n    document.getElementById(\"battleText2\").innerHTML = \"\";\r\n    for(let i = 0; i < local1.length; i++) {\r\n        document.getElementById(\"battleText1\").innerHTML += part1[i];\r\n        await delay(30)\r\n    }\r\n\r\n    for(let i = 0; i < local2.length; i++) {\r\n        document.getElementById(\"battleText2\").innerHTML += part2[i];\r\n        await delay(30)\r\n    }\r\n}\r\n\r\nfunction delay(milliseconds){\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, milliseconds);\r\n    });\r\n}\r\n\r\nasync function backButtonFunction(part1, part2) {\r\n\r\n    document.getElementById(\"battleBox1\").classList.add(\"hide2\");\r\n    document.getElementById(\"battleBox2\").removeChild(document.getElementById(\"backButton\"));\r\n    document.getElementById(\"battleBox2\").classList.add(\"flex\", \"center2\", \"evenly\", \"hide2\");\r\n    document.getElementById(\"battleText\").classList.remove(\"hide2\");\r\n    document.getElementById(\"fightButton1\").classList.remove(\"hide2\");\r\n    document.getElementById(\"fightButton2\").classList.remove(\"hide2\");\r\n    await typeWriter(part1, part2)\r\n    document.getElementById(\"battleBox2\").classList.remove(\"hide2\");\r\n\r\n    const deleteMoveButton = document.getElementById(\"battleBox1\");\r\n    const deleteMoveInfo = document.getElementById(\"battleBox2\");\r\n\r\n    while (deleteMoveButton.lastChild && deleteMoveButton.lastChild !== document.getElementsByTagName(\"p\")) {\r\n        deleteMoveButton.lastChild.remove();\r\n    }\r\n\r\n    let counter = 4;\r\n    while (deleteMoveInfo.lastChild && deleteMoveInfo.lastChild === document.getElementById(`moveInfoDiv${counter}`)) {\r\n        deleteMoveInfo.lastChild.remove();\r\n        counter--\r\n    }\r\n    counter = 4;\r\n}\r\n\r\n// HP countdown\r\nasync function hpCountdown(move, yourPoke, enemyPoke, attackerId, allTypes) {\r\n\r\n    let attacker;\r\n    let damagedPoke;\r\n    let enemy;\r\n    let hpId;\r\n    let hpBar;\r\n    let maxHp\r\n\r\n    // attacker/defender check\r\n    if(attackerId === 0) {\r\n        attacker = yourPoke;\r\n        damagedPoke = enemyPoke;\r\n        enemy = \"enemy\";\r\n        hpId = document.getElementById(\"actualHp1\");\r\n        hpBar = document.getElementById(\"hpBarPara1\");\r\n    }else{\r\n        attacker = enemyPoke;\r\n        damagedPoke = yourPoke;\r\n        enemy = \"you\";\r\n        hpId = document.getElementById(\"actualHp2\");\r\n        hpBar = document.getElementById(\"hpBarPara2\");\r\n    }\r\n\r\n    // Miss check\r\n    let miss = Math.floor(Math.random() * 100) + 1;\r\n\r\n    if(move.accuracy < miss){\r\n        if(enemy === \"enemy\"){\r\n\r\n            await typeWriter(`${capitalizeLetters(attacker.name)} missed`, \"\");\r\n        }else{\r\n\r\n            await typeWriter(`Enemy ${capitalizeLetters(attacker.name)} missed`, \"\");\r\n        }\r\n\r\n        await delay(200);\r\n        return;\r\n    }\r\n\r\n    // physical/special questioning\r\n    let damager;\r\n    let defender;\r\n    let stab = 1;\r\n    let crit = 1;\r\n    let z = 100 - Math.floor(Math.random() * 16);\r\n    let type1 = 1;\r\n    let type2 = 1;\r\n\r\n    if(move.atkType === \"physical\") {\r\n        damager = attacker.attack;\r\n        defender = damagedPoke.defense;\r\n    }else{\r\n        damager = attacker.specialAttack;\r\n        defender = damagedPoke.specialDefense;\r\n    }\r\n\r\n    // stab check\r\n    if(attacker.type.includes(move.type)){\r\n        stab = 1.5;\r\n    }\r\n\r\n    // effectivness check\r\n    for(let index in damagedPoke.type){\r\n\r\n        if(index === \"0\"){\r\n\r\n            if(allTypes[damagedPoke.type[index]].double.map(type => type.name).includes(move.type)){\r\n\r\n                type1 = 2;\r\n            }else if(allTypes[damagedPoke.type[index]].half.map(type => type.name).includes(move.type)){\r\n\r\n                type1 = 0.5;\r\n            }else if(allTypes[damagedPoke.type[index]].no.map(type => type.name).includes(move.type)){\r\n\r\n                type1 = 0;\r\n            }\r\n        }else{\r\n\r\n            if(allTypes[damagedPoke.type[index]].double.map(type => type.name).includes(move.type)){\r\n\r\n                type2 = 2;\r\n            }else if(allTypes[damagedPoke.type[index]].half.map(type => type.name).includes(move.type)){\r\n\r\n                type2 = 0.5;\r\n            }else if(allTypes[damagedPoke.type[index]].no.map(type => type.name).includes(move.type)){\r\n                \r\n                type2 = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    let localDamage = Math.floor(Math.floor(Math.floor(Math.floor(Math.floor(22 * move.damage * (damager/(50 * defender)) + 2) * crit) * (z/100)) * stab) * (type1 * type2));\r\n\r\n    if((type1 * type2) === 0){\r\n\r\n        await typeWriter(\"it had no effect...\", \"\");\r\n    }else if((type1 * type2) <= 0.5){\r\n\r\n        await typeWriter(\"it's not very effective...\", \"\");\r\n    }else if((type1 * type2) >= 2){\r\n        \r\n        await typeWriter(\"It's super effective!\", \"\");\r\n    }\r\n    \r\n    // crit check\r\n    if(parseFloat((Math.random() * 100).toFixed(2)) < 4.16){\r\n        crit = 1.5;\r\n        await delay(200);\r\n        await typeWriter(\"Critical Hit!\", \"\");\r\n        await delay(200);\r\n    }\r\n\r\n    // damage math\r\n    while(localDamage > 0){\r\n        let localHp = parseFloat(hpId.outerText);\r\n\r\n        hpBar.style = `width: ${localHp / damagedPoke.hitpoints * 100}%;`;\r\n\r\n        if(localHp / damagedPoke.hitpoints * 100 < 20){\r\n            hpBar.style = `width: ${localHp / damagedPoke.hitpoints * 100}%; background-color: red;`;\r\n        }else if(localHp / damagedPoke.hitpoints * 100 < 50){\r\n            hpBar.style = `width: ${localHp / damagedPoke.hitpoints * 100}%; background-color: rgb(228, 209, 0);`;\r\n        }\r\n\r\n        if(localHp > 0){\r\n            hpId.innerText = `${localHp - 1}`;\r\n            localDamage--\r\n            await delay(50);\r\n        }else{\r\n            if(document.getElementById(\"battleText\")){\r\n                if(enemy === \"enemy\"){\r\n\r\n                    await typeWriter(`Enemy ${capitalizeLetters(damagedPoke.name)}`, \"fainted!\")\r\n                }else{\r\n\r\n                    await typeWriter(`${capitalizeLetters(damagedPoke.name)}`, \"fainted!\")\r\n                }\r\n            }\r\n            await delay(500);\r\n            const deleteArena = document.getElementById(\"battleArena\");\r\n\r\n            while (deleteArena.firstChild) {\r\n                deleteArena.firstChild.remove();\r\n            }\r\n\r\n            document.getElementById(\"pokeSelection\").classList.remove(\"hide\");\r\n            document.getElementById(\"showArea\").classList.remove(\"hide\");\r\n            document.getElementById(\"battleArena\").classList.add(\"hide\");\r\n            document.getElementById(\"start\").classList.remove(\"hide\");\r\n            document.getElementById(\"choose\").classList.remove(\"hide\");\r\n            document.getElementById(\"yourPokemon\").classList.remove(\"hide\");\r\n            document.getElementById(\"enemyPokemon\").classList.remove(\"hide\");\r\n            document.getElementById(\"body\").classList.remove(\"BattleBack\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    // Struggle \r\n    if(move.name === \"struggle\"){\r\n        let damageOfStruggle = Math.floor(attacker.hitpoints * 0.25);\r\n        let attackerHp;\r\n        let attackerHpBar;\r\n\r\n        // attacker questioning\r\n        if(enemy === \"enemy\"){\r\n            attackerHp = document.getElementById(\"actualHp2\");\r\n            attackerHpBar = document.getElementById(\"hpBarPara2\");\r\n        }else{\r\n            attackerHp = document.getElementById(\"actualHp1\");\r\n            attackerHpBar = document.getElementById(\"hpBarPara1\");\r\n        }\r\n\r\n        // Recoil damage\r\n        while(damageOfStruggle > 0){\r\n           \r\n            if(attackerHp / attacker.hitpoints * 100 < 20){\r\n                attackerHpBar.style = `width: ${attackerHp / attacker.hitpoints * 100}%; background-color: red`;\r\n            }else if(attackerHp / attacker.hitpoints * 100 < 50){\r\n                attackerHpBar.style = `width: ${attackerHp / attacker.hitpoints * 100}%; background-color: rgb(228, 209, 0)`;\r\n            }else{\r\n                attackerHpBar.style = `width: ${attackerHp / attacker.hitpoints * 100}%`;\r\n            }\r\n    \r\n            if(attackerHp > 0){\r\n                attackerHp.innerText = `${attackerHp - 1}`;\r\n                damageOfStruggle--\r\n                await delay(50);\r\n            }else{\r\n                if(document.getElementById(\"battleText\")){\r\n                    if(enemy === \"you\"){\r\n    \r\n                        await typeWriter(`Enemy ${capitalizeLetters(attacker.name)}`, \"fainted!\")\r\n                    }else{\r\n    \r\n                        await typeWriter(`${capitalizeLetters(attacker.name)}`, \"fainted!\")\r\n                    }\r\n                }\r\n                await delay(500);\r\n                const deleteArena = document.getElementById(\"battleArena\");\r\n    \r\n                while (deleteArena.firstChild) {\r\n                    deleteArena.firstChild.remove();\r\n                }\r\n    \r\n                document.getElementById(\"pokeSelection\").classList.remove(\"hide\");\r\n                document.getElementById(\"showArea\").classList.remove(\"hide\");\r\n                document.getElementById(\"battleArena\").classList.add(\"hide\");\r\n                document.getElementById(\"start\").classList.remove(\"hide\");\r\n                document.getElementById(\"choose\").classList.remove(\"hide\");\r\n                document.getElementById(\"yourPokemon\").classList.remove(\"hide\");\r\n                document.getElementById(\"enemyPokemon\").classList.remove(\"hide\");\r\n                document.getElementById(\"body\").classList.remove(\"BattleBack\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Move Function\r\nasync function moveUsage(move, pokemons, activPoke, enemyMove, allTypes) {\r\n    \r\n    let chosenMove;\r\n    let moveValue;\r\n\r\n    if(move === 5){\r\n        moveValue = \"struggle\";\r\n        pokemons[activPoke[0]].pokeMoves[moveValue] = {\r\n            name: \"struggle\",\r\n            atkType: \"physical\",\r\n            power: 50,\r\n            accuracy: 100\r\n        };\r\n    }else{\r\n        chosenMove = document.getElementById(`moveButton${move+1}`);\r\n        moveValue = chosenMove.value;\r\n    }\r\n\r\n    document.getElementById(\"battleBox1\").classList.add(\"hide2\");\r\n    document.getElementById(\"battleBox2\").classList.add(\"hide2\");\r\n    document.getElementById(\"battleText\").classList.remove(\"hide2\");\r\n\r\n    // Speed check\r\n    let speedChecker = Math.floor(Math.random() * 100) + 1;\r\n    let whoFirst;\r\n\r\n    if(pokemons[activPoke[0]].speed === pokemons[activPoke[1]].speed){\r\n        if(speedChecker > 50){\r\n            whoFirst = \"you\";\r\n        }else{\r\n            whoFirst = \"enemy\";\r\n        }\r\n    }else if(pokemons[activPoke[0]].speed > pokemons[activPoke[1]].speed) {\r\n        whoFirst = \"you\";\r\n    }else{\r\n        whoFirst = \"enemy\"\r\n    }\r\n\r\n    // Actual Move Usage into DOM\r\n    if(whoFirst === \"you\"){\r\n        await typeWriter(`${capitalizeLetters(activPoke[0])} used`, `${capitalizeLetters(moveValue)}!`);\r\n        await delay(200);\r\n        await hpCountdown(pokemons[activPoke[0]].pokeMoves[moveValue], pokemons[activPoke[0]], pokemons[activPoke[1]], 0, allTypes);\r\n\r\n        if(document.getElementById(\"battleText\")){\r\n\r\n            await delay(500);\r\n            await typeWriter(`Enemy ${capitalizeLetters(activPoke[1])} used`, `${capitalizeLetters(enemyMove.name)}!`);\r\n            await delay(200);\r\n            await hpCountdown(enemyMove, pokemons[activPoke[0]], pokemons[activPoke[1]], 1, allTypes);\r\n            await delay(500);\r\n        }\r\n    }else{\r\n        await typeWriter(`Enemy ${capitalizeLetters(activPoke[1])} used`, `${capitalizeLetters(enemyMove.name)}!`);\r\n        await delay(200);\r\n        await hpCountdown(enemyMove, pokemons[activPoke[0]], pokemons[activPoke[1]], 1, allTypes);\r\n        if(document.getElementById(\"battleText\")){\r\n\r\n            await delay(500);\r\n            await typeWriter(`${capitalizeLetters(activPoke[0])} used`, `${capitalizeLetters(moveValue)}!`);\r\n            await delay(200);\r\n            await hpCountdown(pokemons[activPoke[0]].pokeMoves[moveValue], pokemons[activPoke[0]], pokemons[activPoke[1]], 0, allTypes);\r\n            await delay(500);\r\n        }\r\n    }\r\n\r\n    if(document.getElementById(\"battleBox2\")){\r\n        document.getElementById(\"battleBox2\").classList.remove(\"hide2\");\r\n    }\r\n\r\n}\r\n\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// Add pokemon\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\nasync function getData(callback, callback2) {\r\n    // const pokeInfo = await fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=151\");\r\n    // const pokeInfoConvert = await pokeInfo.json();\r\n    // const moveInfo = await fetch(\"https://pokeapi.co/api/v2/move/?offset=0&limit=844\");\r\n    // const moveInfoConvert = await moveInfo.json();\r\n    // const typeInfo = await fetch(\"https://pokeapi.co/api/v2/type/?offset=0&limit=18\");\r\n    // const typeInfoConvert = await typeInfo.json();\r\n\r\n    // const pokeData = {};\r\n    // const allMoves = {};\r\n    // const allTypes = {};\r\n\r\n    // for (const move of moveInfoConvert.results) {\r\n\r\n    //     const singleMove = await fetch(move.url);\r\n    //     const singleMoveData = await singleMove.json();\r\n    //     allMoves[singleMoveData.name] = {\r\n    //         name : singleMoveData.name,\r\n    //         type: singleMoveData.type.name,\r\n    //         atkType: singleMoveData.damage_class.name,\r\n    //         damage: singleMoveData.power,\r\n    //         powerpoints: singleMoveData.pp,\r\n    //         accuracy: singleMoveData.accuracy\r\n    //     }\r\n\r\n    //     console.log(move);\r\n    // }\r\n\r\n    // for (const type of typeInfoConvert.results) {\r\n\r\n    //     const singleType = await fetch(type.url);\r\n    //     const singleTypeData = await singleType.json();\r\n    //     allTypes[singleTypeData.name] = {\r\n    //         name : singleTypeData.name,\r\n    //         double: singleTypeData.damage_relations.double_damage_from,\r\n    //         half: singleTypeData.damage_relations.half_damage_from,\r\n    //         no: singleTypeData.damage_relations.no_damage_from\r\n    //     }\r\n    // }\r\n\r\n    // for (const poke of pokeInfoConvert.results) {\r\n\r\n    //     const mon = await fetch(poke.url);\r\n    //     const monData = await mon.json();\r\n\r\n    //     const moves = {};\r\n    //     for(let i = 0; i < monData.moves.length; i++){\r\n    //         const localName = allMoves[monData.moves[i].move.name];\r\n    //         if(localName.damage !== null){\r\n    //             moves[localName.name] = {\r\n    //                 name : localName.name,\r\n    //                 type: localName.type,\r\n    //                 atkType: localName.atkType,\r\n    //                 damage: localName.damage,\r\n    //                 powerpoints: localName.powerpoints,\r\n    //                 accuracy: localName.accuracy\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     // const hpFormula = ((2 * baseWert + 31) * 50) / 100 + 50 + 10;\r\n    //     // const statsFormula = ((2 * baseWert + 31) * 50) / 100 + 5;\r\n\r\n    //     pokeData[monData.name] = {\r\n    //         name : monData.name,\r\n    //         type: typeSplit(monData.types),\r\n    //         hitpoints: Math.floor(((2 * monData.stats[0].base_stat + 31) * 50) / 100 + 50 + 10),\r\n    //         attack: Math.floor(((2 * monData.stats[1].base_stat + 31) * 50) / 100 + 5),\r\n    //         defense: Math.floor(((2 * monData.stats[2].base_stat + 31) * 50) / 100 + 5),\r\n    //         specialAttack: Math.floor(((2 * monData.stats[3].base_stat + 31) * 50) / 100 + 5),\r\n    //         specialDefense: Math.floor(((2 * monData.stats[4].base_stat + 31) * 50) / 100 + 5),\r\n    //         speed: Math.floor(((2 * monData.stats[5].base_stat + 31) * 50) / 100 + 5),\r\n    //         pokeMoves: moves,\r\n    //         spriteFront: `src/pokemonSprites/FurretTurret/${capitalizeLetters(monData.name)}.gif`,\r\n    //         battleSpriteFront: `src/pokemonSprites/front/${monData.id}.gif`,\r\n    //         battleSpriteBack: `src/pokemonSprites/back/${monData.id}.gif`\r\n    //     }\r\n    // }\r\n\r\n    const pokeData = {};\r\n    const allMoves = {};\r\n    const allTypes = {};\r\n\r\n    for(let i = 1; i <= 151; i++){\r\n        const mon = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}`);\r\n        const monData = await mon.json();\r\n        // console.log(monData);\r\n        pokeData[monData.name] = {\r\n            name : monData.name,\r\n            type: typeSplit(monData.types),\r\n            hitpoints: Math.floor(((2 * monData.stats[0].base_stat + 31) * 50) / 100 + 50 + 10),\r\n            attack: Math.floor(((2 * monData.stats[1].base_stat + 31) * 50) / 100 + 5),\r\n            defense: Math.floor(((2 * monData.stats[2].base_stat + 31) * 50) / 100 + 5),\r\n            specialAttack: Math.floor(((2 * monData.stats[3].base_stat + 31) * 50) / 100 + 5),\r\n            specialDefense: Math.floor(((2 * monData.stats[4].base_stat + 31) * 50) / 100 + 5),\r\n            speed: Math.floor(((2 * monData.stats[5].base_stat + 31) * 50) / 100 + 5),\r\n            allMoves: monData.moves.map(value => value.move.name),\r\n            pokeMoves: {},\r\n            spriteFront: `src/pokemonSprites/FurretTurret/${capitalizeLetters(monData.name)}.gif`,\r\n            battleSpriteFront: `src/pokemonSprites/front/${monData.id}.gif`,\r\n            battleSpriteBack: `src/pokemonSprites/back/${monData.id}.gif`\r\n        }\r\n        \r\n        for(let i = 0; i < monData.moves.length; i++){\r\n\r\n            if(!allMoves[monData.moves[i].move.name]){\r\n                const move = await fetch(monData.moves[i].move.url)\r\n                allMoves[monData.moves[i].move.name] = await move.json();\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    for (let i = 1; i <= 18; i++) {\r\n\r\n        const singleType = await fetch(`https://pokeapi.co/api/v2/type/${i}`);\r\n        const singleTypeData = await singleType.json();\r\n        allTypes[singleTypeData.name] = {\r\n            name : singleTypeData.name,\r\n            double: singleTypeData.damage_relations.double_damage_from,\r\n            half: singleTypeData.damage_relations.half_damage_from,\r\n            no: singleTypeData.damage_relations.no_damage_from\r\n        }\r\n    }\r\n\r\n    const finishedPokeData = await callback2(pokeData, allMoves);\r\n\r\n    callback(finishedPokeData, allTypes);\r\n}\r\n\r\ngetData(createPage, finishPokeData);\r\n\r\n// callback2\r\nfunction finishPokeData(pokemons, allMoves) {\r\n\r\n    for(let poke in pokemons){\r\n\r\n        for(const move in allMoves){\r\n\r\n            if(pokemons[poke].allMoves.includes(move)){\r\n    \r\n                if(allMoves[move].power !== null){\r\n                    pokemons[poke].pokeMoves[move] = {\r\n                        name : allMoves[move].name,\r\n                        type: allMoves[move].type.name,\r\n                        atkType: allMoves[move].damage_class.name,\r\n                        damage: allMoves[move].power,\r\n                        powerpoints: allMoves[move].pp,\r\n                        accuracy: allMoves[move].accuracy\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return pokemons;\r\n}\r\n\r\n\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// Selection (callback)\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\n// -------------------------------------------------\r\nfunction createPage(pokemons, allTypes){\r\n\r\n    let obj = document.querySelectorAll(\"[data-pokemon]\");\r\n    for(let poke in pokemons){\r\n\r\n        for(let i = 0; i < 2; i++){\r\n            let option = document.createElement(\"option\");\r\n            option.value = pokemons[poke].name;\r\n            option.innerHTML = capitalizeLetters(pokemons[poke].name);\r\n            obj[i].appendChild(option);\r\n        }\r\n    }\r\n\r\n    document.getElementById(\"load\").classList.add(\"hide\");\r\n    const activPoke = [];\r\n    \r\n    // Choose button function\r\n    document.getElementById(\"choose\").onclick = () => {\r\n    \r\n        // Deletes previous choses\r\n        if(document.getElementById(\"pokemonShow\") && document.getElementById(\"chosenNames\") && document.getElementById(\"attacks\")){\r\n            document.getElementById(\"showArea\").removeChild(document.getElementById(\"pokemonShow\"));\r\n            document.getElementById(\"showArea\").removeChild(document.getElementById(\"chosenNames\"));\r\n            document.getElementById(\"showArea\").removeChild(document.getElementById(\"attacks\"));\r\n        }\r\n    \r\n        // DOM changes\r\n        document.getElementById(\"choose\").innerHTML = \"Change\";\r\n        document.getElementById(\"start\").classList.remove(\"hide\");\r\n    \r\n        // Creates pokemon in DOM based of inputs\r\n        let divNames = document.createElement(\"div\");\r\n        let divShow = document.createElement(\"div\");\r\n        divNames.setAttribute(\"id\", \"chosenNames\");\r\n        divNames.setAttribute(\"class\", \"flex between\");\r\n        divShow.setAttribute(\"id\", \"pokemonShow\");\r\n        divShow.setAttribute(\"class\", \"flex\");\r\n        document.getElementById(\"showArea\").appendChild(divNames);\r\n        document.getElementById(\"showArea\").appendChild(divShow);\r\n    \r\n        for(let i = 0; i < 2; i++){\r\n            let poke = obj[i].value.toLowerCase();\r\n            let div = document.createElement(\"div\");\r\n            let figure = document.createElement(\"figure\");\r\n            let pokeName = document.createElement(\"h2\");\r\n            let img = document.createElement(\"img\");\r\n    \r\n            // Attributes/inner\r\n            div.setAttribute(\"id\", `pokemon${i+1}`);\r\n            div.setAttribute(\"class\", \"flex half gap2 showCaseCon center1\");\r\n            figure.setAttribute(\"class\", \"flex align-end\");\r\n            img.setAttribute(\"src\", pokemons[poke].spriteFront);\r\n            pokeName.setAttribute(\"class\", \"half textCenter\");\r\n            pokeName.setAttribute(\"id\", `pokeName${i+1}`);\r\n            activPoke.splice(i, 1, pokemons[poke].name);\r\n            pokeName.innerHTML = pokemons[poke].name;\r\n    \r\n            // HTML construction\r\n            divShow.appendChild(div);\r\n            divNames.appendChild(pokeName);\r\n            div.appendChild(figure);\r\n            figure.appendChild(img);\r\n        }\r\n\r\n        // Create container for choosable attacks\r\n        let divAttacks = document.createElement(\"div\");\r\n        divAttacks.setAttribute(\"id\", \"attacks\");\r\n        divAttacks.setAttribute(\"class\", \"flex gap\");\r\n        document.getElementById(\"showArea\").appendChild(divAttacks);\r\n    \r\n        // Create selects of choosable attacks in container\r\n        for(let i = 0; i < 4; i++){\r\n\r\n            // selects/container\r\n            let div = document.createElement(\"div\")\r\n            let select = document.createElement(\"select\");\r\n            let type = document.createElement(\"p\");\r\n    \r\n            // Attributes\r\n            div.setAttribute(\"class\", \"flex column gap center1 center2\");\r\n            select.setAttribute(\"id\", `attack${i+1}`);\r\n            type.setAttribute(\"id\", `info${i+1}`);\r\n            type.setAttribute(\"class\", `infoText`);\r\n            select.setAttribute(\"class\", \"attackPKM\");\r\n            document.getElementById(\"attacks\").appendChild(div);\r\n            div.appendChild(select);\r\n            div.appendChild(type);\r\n            \r\n            // Create options for selects\r\n            let poke = obj[0].value.toLowerCase();\r\n\r\n            for(let atk in pokemons[poke].pokeMoves){\r\n                let option = document.createElement(\"option\");\r\n                option.value = pokemons[poke].pokeMoves[atk].name;\r\n                option.innerHTML = capitalizeLetters(pokemons[poke].pokeMoves[atk].name);\r\n                select.appendChild(option); \r\n            }\r\n    \r\n            // Info for the attacks\r\n            document.querySelector(`#attack${i+1} option:nth-of-type(${i+1})`).setAttribute(\"selected\", \"\");\r\n\r\n            document.getElementById(`info${i+1}`).innerHTML = `\r\n            Power: ${pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].damage}<br>\r\n            Type: ${capitalizeLetters(pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].type)}<br>\r\n            Accuracy: ${pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].accuracy}`;\r\n            document.getElementById(`attack${i+1}`).onchange = () => {\r\n                document.getElementById(`info${i+1}`).innerHTML = `\r\n                Power: ${pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].damage}<br>\r\n                Type: ${capitalizeLetters(pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].type)}<br>\r\n                Accuracy: ${pokemons[poke].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].accuracy}`;\r\n            }     \r\n        }\r\n    }\r\n\r\n\r\n    // -------------------------------------------------\r\n    // -------------------------------------------------\r\n    // -------------------------------------------------\r\n    // Start Button\r\n    // -------------------------------------------------\r\n    // -------------------------------------------------\r\n    // -------------------------------------------------\r\n    document.getElementById(\"start\").onclick = async () => {\r\n\r\n        for(let i = 0; i < 4; i++){\r\n\r\n            // Error check for 4 different moves picked\r\n            let localMoveToCheck = document.getElementById(`attack${i+1}`).value;\r\n            for(let j = 0; j < 4; j++){\r\n\r\n                let otherMovesToCheck;\r\n                switch(i+1) {\r\n                    case 1:\r\n                        if(j !== 0){\r\n                            otherMovesToCheck = document.getElementById(`attack${j+1}`).value;\r\n                        }\r\n                        break;\r\n\r\n                    case 2:\r\n                        if(j !== 1){\r\n                            otherMovesToCheck = document.getElementById(`attack${j+1}`).value;\r\n                        }\r\n                        break;\r\n\r\n                    case 3:\r\n                        if(j !== 2){\r\n                            otherMovesToCheck = document.getElementById(`attack${j+1}`).value;\r\n                        }\r\n                        break;\r\n\r\n                    case 4:\r\n                        if(j !== 3){\r\n                            otherMovesToCheck = document.getElementById(`attack${j+1}`).value;\r\n                        }\r\n                        break;\r\n\r\n                }\r\n\r\n                if(localMoveToCheck === otherMovesToCheck){\r\n                    return alert(\"You need to chose 4 different moves!\");\r\n                }\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"pokeSelection\").classList.add(\"hide\");\r\n        document.getElementById(\"showArea\").classList.add(\"hide\");\r\n        document.getElementById(\"battleArena\").classList.remove(\"hide\");\r\n        document.getElementById(\"start\").classList.add(\"hide\");\r\n        document.getElementById(\"choose\").classList.add(\"hide\");\r\n        document.getElementById(\"yourPokemon\").classList.add(\"hide\");\r\n        document.getElementById(\"enemyPokemon\").classList.add(\"hide\");\r\n        document.getElementById(\"body\").classList.add(\"BattleBack\");\r\n\r\n        // Create battle arena\r\n        const enemyPokeDiv = document.createElement(\"div\");\r\n        const yourPokeDiv = document.createElement(\"div\");\r\n        const backgroundDiv = document.createElement(\"div\");\r\n        const battleTextDiv = document.createElement(\"div\");\r\n\r\n        backgroundDiv.setAttribute(\"class\", \"battleBackground flex column\");\r\n        enemyPokeDiv.setAttribute(\"class\", \"battleDiv flex center2 fullsize\");\r\n        enemyPokeDiv.setAttribute(\"id\", \"pokeDiv1\");\r\n        yourPokeDiv.setAttribute(\"class\", \"battleDiv flex center2 justify-end fullsize\");\r\n        yourPokeDiv.setAttribute(\"id\", \"pokeDiv2\");\r\n        battleTextDiv.setAttribute(\"class\", \"battleTextDiv flex between fullsize\");\r\n        document.getElementById(\"battleArena\").classList.add(\"flex\", \"column\");\r\n\r\n        // Create DOM\r\n        document.getElementById(\"battleArena\").appendChild(backgroundDiv)\r\n        backgroundDiv.appendChild(enemyPokeDiv);\r\n        backgroundDiv.appendChild(yourPokeDiv);\r\n        document.getElementById(\"battleArena\").appendChild(battleTextDiv);\r\n\r\n\r\n        for(let i = 0; i < 2; i++){\r\n            const battleFigure = document.createElement(\"figure\");\r\n            const battlePoke = document.createElement(\"img\");\r\n            const infoDiv = document.createElement(\"div\");\r\n            const nameDiv = document.createElement(\"div\");\r\n            const hpBar = document.createElement(\"div\");\r\n            const hpBarPara = document.createElement(\"div\");\r\n            const hpBarParaBorder = document.createElement(\"div\");\r\n            const pokeName = document.createElement(\"p\");\r\n            const pokeLvl = document.createElement(\"p\");\r\n            const hpCount = document.createElement(\"p\");\r\n            const actualHp = document.createElement(\"span\");\r\n            const maxHp = document.createElement(\"span\");\r\n\r\n            // Container all info\r\n            infoDiv.setAttribute(\"class\", \"infoContainer flex column align-end\");\r\n\r\n            // Container name and container hp\r\n            nameDiv.setAttribute(\"class\", \"nameContainer fullsize flex between\");\r\n            hpBar.setAttribute(\"class\", \"hpBar\");\r\n\r\n            infoDiv.appendChild(nameDiv);\r\n            infoDiv.appendChild(hpBar);\r\n\r\n            // Name and level\r\n            nameDiv.appendChild(pokeName);\r\n            nameDiv.appendChild(pokeLvl);\r\n\r\n            // actual hpBar inner\r\n            hpBarParaBorder.setAttribute(\"class\", \"hpBarBorder\");\r\n            hpBarPara.setAttribute(\"class\", \"hpBarPara\");\r\n            hpBarPara.setAttribute(\"id\", `hpBarPara${i+1}`);\r\n            actualHp.setAttribute(\"id\", `actualHp${i+1}`);\r\n            maxHp.setAttribute(\"id\", `maxHp${i+1}`);\r\n            hpBar.appendChild(hpBarParaBorder);\r\n            hpBarParaBorder.appendChild(hpBarPara);\r\n            infoDiv.appendChild(hpCount);\r\n            hpCount.appendChild(actualHp);\r\n            hpCount.appendChild(maxHp);\r\n            \r\n            if(i === 0){\r\n                \r\n                battleFigure.setAttribute(\"class\", \"flex align-end center1\");\r\n                battlePoke.setAttribute(\"src\", pokemons[activPoke[1]].battleSpriteFront);\r\n                hpCount.setAttribute(\"class\", \"hide2\");\r\n                document.getElementById(\"pokeDiv1\").appendChild(infoDiv);\r\n                document.getElementById(\"pokeDiv1\").appendChild(battleFigure);\r\n\r\n                // Info into HTML\r\n                pokeName.innerText = `${capitalizeLetters(pokemons[activPoke[1]].name)}`;\r\n                pokeLvl.innerText = \"Lv50\";\r\n                document.getElementById(`actualHp${i+1}`).innerText = `${pokemons[activPoke[1]].hitpoints}`;\r\n                document.getElementById(`maxHp${i+1}`).innerText = `/${pokemons[activPoke[1]].hitpoints}`;\r\n\r\n            }else if(i === 1){\r\n\r\n                battleFigure.setAttribute(\"class\", \"flex align-end center1\");\r\n                battlePoke.setAttribute(\"src\", pokemons[activPoke[0]].battleSpriteBack);\r\n                document.getElementById(\"pokeDiv2\").appendChild(battleFigure);\r\n                document.getElementById(\"pokeDiv2\").appendChild(infoDiv);\r\n                \r\n                // Info into HTML\r\n                pokeName.innerText = `${capitalizeLetters(pokemons[activPoke[0]].name)}`;\r\n                pokeLvl.innerText = \"Lv50\"\r\n                document.getElementById(`actualHp${i+1}`).innerText = `${pokemons[activPoke[0]].hitpoints}`;\r\n                document.getElementById(`maxHp${i+1}`).innerText = `/${pokemons[activPoke[0]].hitpoints}`;\r\n\r\n            }\r\n\r\n            battleFigure.appendChild(battlePoke);\r\n        }\r\n\r\n\r\n        // Battle text div / buttons\r\n        const battleBox1 = document.createElement(\"div\");\r\n        const battleBox2 = document.createElement(\"div\");\r\n        const battleText = document.createElement(\"p\");\r\n        const battleText1 = document.createElement(\"span\");\r\n        const battleText2 = document.createElement(\"span\");\r\n        const battleButton = document.createElement(\"button\");\r\n        const runButton = document.createElement(\"button\");\r\n\r\n        // Attributes\r\n        battleBox1.setAttribute(\"class\", \"battleBox hide2\");\r\n        battleBox1.setAttribute(\"id\", \"battleBox1\");\r\n        battleBox2.setAttribute(\"class\", \"battleBox flex center2 evenly\");\r\n        battleBox2.setAttribute(\"id\", \"battleBox2\");\r\n        battleText.setAttribute(\"class\", \"battleText flex column\");\r\n        battleText.setAttribute(\"id\", \"battleText\");\r\n        battleText1.setAttribute(\"id\", \"battleText1\");\r\n        battleText2.setAttribute(\"id\", \"battleText2\");\r\n        battleButton.setAttribute(\"class\", \"fightButtons\");\r\n        battleButton.setAttribute(\"id\", \"fightButton1\");\r\n        runButton.setAttribute(\"class\", \"fightButtons\");\r\n        runButton.setAttribute(\"id\", \"fightButton2\");\r\n\r\n        // Values/inner text\r\n        battleButton.innerText = \"Fight\";\r\n        runButton.innerText = \"Run\";\r\n\r\n        // DOM integration\r\n        battleTextDiv.appendChild(battleText);\r\n        battleTextDiv.appendChild(battleBox1);\r\n        battleText.appendChild(battleText1);\r\n        battleText.appendChild(battleText2);\r\n        battleBox2.appendChild(battleButton);\r\n        battleBox2.appendChild(runButton);\r\n        await typeWriter(\"What will\", `${capitalizeLetters(pokemons[activPoke[0]].name)} do?`);\r\n        battleTextDiv.appendChild(battleBox2);\r\n\r\n        // PP Safe your poke\r\n        let localPP1 = pokemons[activPoke[0]].pokeMoves[document.getElementById(\"attack1\").value.toLowerCase()].powerpoints;\r\n        let localPP2 = pokemons[activPoke[0]].pokeMoves[document.getElementById(\"attack2\").value.toLowerCase()].powerpoints;\r\n        let localPP3 = pokemons[activPoke[0]].pokeMoves[document.getElementById(\"attack3\").value.toLowerCase()].powerpoints;\r\n        let localPP4 = pokemons[activPoke[0]].pokeMoves[document.getElementById(\"attack4\").value.toLowerCase()].powerpoints;\r\n\r\n        // pp and move safe enemy poke\r\n        let localEnemyMoves = Object.values(pokemons[activPoke[1]].pokeMoves);\r\n        const enemyPokeMoves = [];\r\n        while(enemyPokeMoves.length < 4){\r\n            let randomNum = Math.floor(Math.random() * localEnemyMoves.length);\r\n            if(!enemyPokeMoves.includes(localEnemyMoves[randomNum])){\r\n                enemyPokeMoves.push(localEnemyMoves[randomNum]);\r\n            }\r\n        }\r\n\r\n        const enemyPPArr = [];\r\n        enemyPPArr.push(enemyPokeMoves[0]);\r\n        enemyPPArr.push(enemyPokeMoves[1]);\r\n        enemyPPArr.push(enemyPokeMoves[2]);\r\n        enemyPPArr.push(enemyPokeMoves[3]);\r\n\r\n        // -------------------------------------------------\r\n        // -------------------------------------------------\r\n        // -------------------------------------------------\r\n        // Fight Button\r\n        // -------------------------------------------------\r\n        // -------------------------------------------------\r\n        // -------------------------------------------------\r\n        battleButton.onclick = () => {\r\n\r\n            // DOM swap\r\n            document.getElementById(\"battleBox2\").classList.remove(\"flex\", \"center2\", \"evenly\");\r\n            document.getElementById(\"fightButton1\").classList.add(\"hide2\");\r\n            document.getElementById(\"fightButton2\").classList.add(\"hide2\");\r\n            battleText.classList.add(\"hide2\");\r\n            battleBox1.classList.remove(\"hide2\");\r\n            battleBox1.classList.add(\"flex\", \"wrap\", \"center2\", \"evenly\", \"gap\");\r\n\r\n            // Move buttons create\r\n            for(let i = 0; i < 4; i++) {\r\n\r\n                const moveButtonDiv = document.createElement(\"div\");\r\n                const moveButton = document.createElement(\"button\");\r\n                const moveInfoDiv = document.createElement(\"div\");\r\n                const moveInfo = document.createElement(\"p\");\r\n                const moveInfoPP = document.createElement(\"span\");\r\n                \r\n                moveButtonDiv.setAttribute(\"class\", `moveButtonDiv`);\r\n                moveInfoDiv.setAttribute(\"class\", `moveInfoDiv hide2`);\r\n                moveInfoDiv.setAttribute(\"id\", `moveInfoDiv${i+1}`);\r\n                moveButton.setAttribute(\"id\", `moveButton${i+1}`);\r\n                moveButton.setAttribute(\"class\", `fightButtons moveButtons`);\r\n                moveButton.value = document.getElementById(`attack${i+1}`).value;\r\n                moveButton.innerText = capitalizeLetters(document.getElementById(`attack${i+1}`).value);\r\n\r\n                battleBox1.appendChild(moveButtonDiv);\r\n                moveButtonDiv.appendChild(moveButton);\r\n                battleBox2.appendChild(moveInfoDiv);\r\n                moveInfoDiv.appendChild(moveInfo);\r\n\r\n                moveInfo.innerHTML = document.getElementById(`info${i+1}`).outerHTML;\r\n                moveInfo.appendChild(moveInfoPP);\r\n\r\n                moveButton.addEventListener(\"mouseover\", mOver, false);\r\n                moveButton.addEventListener(\"mouseout\", mOut, false);\r\n\r\n                switch(i+1) {\r\n                    case 1:\r\n                        moveInfoPP.innerText = `PP: ${localPP1}/${pokemons[activPoke[0]].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].powerpoints}`;\r\n                        break;\r\n\r\n                    case 2:\r\n                        moveInfoPP.innerText = `PP: ${localPP2}/${pokemons[activPoke[0]].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].powerpoints}`;\r\n                        break;\r\n\r\n                    case 3:\r\n                        moveInfoPP.innerText = `PP: ${localPP3}/${pokemons[activPoke[0]].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].powerpoints}`;\r\n                        break;\r\n\r\n                    case 4:\r\n                        moveInfoPP.innerText = `PP: ${localPP4}/${pokemons[activPoke[0]].pokeMoves[document.getElementById(`attack${i+1}`).value.toLowerCase()].powerpoints}`;\r\n                        break;\r\n\r\n                }\r\n\r\n                function mOver() {\r\n                    moveInfoDiv.classList.remove(\"hide2\");\r\n                }\r\n\r\n                function mOut() {  \r\n                    moveInfoDiv.classList.add(\"hide2\");\r\n                }\r\n\r\n            }\r\n\r\n            function sortPP(localPP, move) {\r\n                    \r\n                document.getElementById(`moveButton${move+1}`).onclick = async () => {\r\n\r\n                    let randomMove = Math.floor(Math.random() * enemyPPArr.length);\r\n                    let usedMove = enemyPPArr[randomMove];\r\n\r\n                    if(enemyPPArr[0].powerpoints !== 0 || enemyPPArr[1].powerpoints !== 0 || enemyPPArr[2].powerpoints !== 0 || enemyPPArr[3].powerpoints !== 0){\r\n\r\n                        while(enemyPPArr[randomMove].powerpoints === 0){\r\n                            randomMove = Math.floor(Math.random() * enemyPPArr.length);\r\n                        }\r\n                    }else{\r\n                        usedMove = {\r\n                            name: \"struggle\",\r\n                            atkType: \"physical\",\r\n                            power: 50,\r\n                            accuracy: 100\r\n                        };\r\n                    }\r\n\r\n                    if(localPP1 === 0 && localPP2 === 0 && localPP3 === 0 && localPP4 === 0){\r\n                        const struggle = 5;\r\n\r\n                        await moveUsage(struggle, pokemons, activPoke, usedMove, allTypes);\r\n                        \r\n                        if(document.getElementById(\"backButton\")){\r\n                            backButtonFunction(\"What will\", `${capitalizeLetters(pokemons[activPoke[0]].name)} do?`);\r\n                        }\r\n\r\n                    }else if(localPP === 0){\r\n                        document.getElementById(\"battleBox1\").classList.add(\"hide2\");\r\n                        document.getElementById(\"battleBox2\").classList.add(\"hide2\");\r\n                        document.getElementById(\"battleText\").classList.remove(\"hide2\");\r\n                        await typeWriter(\"Not enought PP\", \"\")\r\n                        await delay(500);\r\n                        document.getElementById(\"battleBox1\").classList.remove(\"hide2\");\r\n                        document.getElementById(\"battleBox2\").classList.remove(\"hide2\");\r\n                        document.getElementById(\"battleText\").classList.add(\"hide2\");\r\n\r\n                    }else{\r\n\r\n                        switch(move+1) {\r\n                            case 1:\r\n                                localPP1--;\r\n                                enemyPPArr[randomMove].powerpoints--;\r\n                                break;\r\n        \r\n                            case 2:\r\n                                localPP2--;\r\n                                enemyPPArr[randomMove].powerpoints--;\r\n                                break;\r\n        \r\n                            case 3:\r\n                                localPP3--;\r\n                                enemyPPArr[randomMove].powerpoints--;\r\n                                break;\r\n        \r\n                            case 4:\r\n                                localPP4--;\r\n                                enemyPPArr[randomMove].powerpoints--;\r\n                                break;\r\n        \r\n\r\n                        }\r\n\r\n                        await moveUsage(move, pokemons, activPoke, usedMove, allTypes);\r\n                        \r\n                        if(document.getElementById(\"backButton\")){\r\n                            backButtonFunction(\"What will\", `${capitalizeLetters(pokemons[activPoke[0]].name)} do?`);\r\n                        }\r\n                    }\r\n                }   \r\n            }\r\n\r\n            for(let i = 0; i < 4; i++){\r\n\r\n                switch(i+1) {\r\n                    case 1:\r\n                        sortPP(localPP1, i);\r\n                        break;\r\n\r\n                    case 2:\r\n                        sortPP(localPP2, i);\r\n                        break;\r\n\r\n                    case 3:\r\n                        sortPP(localPP3, i);\r\n                        break;\r\n\r\n                    case 4:\r\n                        sortPP(localPP4, i);\r\n                        break;\r\n\r\n                }\r\n            }\r\n            \r\n            // Back button\r\n            const backButton = document.createElement(\"button\");\r\n            backButton.setAttribute(\"class\", \"backButton\");\r\n            backButton.setAttribute(\"id\", \"backButton\");\r\n            // backButton.innerHTML = `<i class=\"fa-solid fa-caret-right\"></i>`\r\n            backButton.innerHTML = `>`\r\n            battleBox2.appendChild(backButton);\r\n\r\n            document.getElementById(\"backButton\").onclick = () => backButtonFunction(\"What will\", `${capitalizeLetters(pokemons[activPoke[0]].name)} do?`);\r\n        }\r\n\r\n        // Run\r\n        runButton.onclick = () => {\r\n            const deleteArena = document.getElementById(\"battleArena\");\r\n\r\n            while (deleteArena.firstChild) {\r\n                deleteArena.firstChild.remove();\r\n            }\r\n\r\n            document.getElementById(\"pokeSelection\").classList.remove(\"hide\");\r\n            document.getElementById(\"showArea\").classList.remove(\"hide\");\r\n            document.getElementById(\"battleArena\").classList.add(\"hide\");\r\n            document.getElementById(\"start\").classList.remove(\"hide\");\r\n            document.getElementById(\"choose\").classList.remove(\"hide\");\r\n            document.getElementById(\"yourPokemon\").classList.remove(\"hide\");\r\n            document.getElementById(\"enemyPokemon\").classList.remove(\"hide\");\r\n            document.getElementById(\"body\").classList.remove(\"BattleBack\");\r\n        }\r\n    }\r\n}"],"names":["$dad545c909cfec2d$var$capitalizeLetters","str","local","includes","split","i","toUpperCase","substring","join","async","$dad545c909cfec2d$var$typeWriter","part1","part2","local1","local2","document","getElementById","innerHTML","length","$dad545c909cfec2d$var$delay","i1","milliseconds","Promise","resolve","setTimeout","$dad545c909cfec2d$var$backButtonFunction","classList","add","removeChild","remove","deleteMoveButton","deleteMoveInfo","lastChild","getElementsByTagName","counter","$dad545c909cfec2d$var$hpCountdown","move","yourPoke","enemyPoke","attackerId","allTypes","attacker","damagedPoke","enemy","hpId","hpBar","damager","defender","miss","Math","floor","random","accuracy","name","stab","crit","z","type1","type2","atkType","attack","defense","specialAttack","specialDefense","type","index","double","map","half","no","localDamage","damage","parseFloat","toFixed","localHp","outerText","style","hitpoints","deleteArena","firstChild","innerText","attackerHp","attackerHpBar","damageOfStruggle","$dad545c909cfec2d$var$moveUsage","pokemons","activPoke","enemyMove","chosenMove","moveValue","pokeMoves","power","value","whoFirst","speedChecker","speed","callback","callback2","pokeData","allMoves","mon","fetch","monData","json","types","stats","base_stat","moves","spriteFront","battleSpriteFront","id","battleSpriteBack","i3","url","i2","singleType","singleTypeData","damage_relations","double_damage_from","half_damage_from","no_damage_from","$dad545c909cfec2d$var$getData","obj","querySelectorAll","poke1","i5","option","createElement","appendChild","onclick","divNames","divShow","setAttribute","poke","toLowerCase","div","figure","pokeName","img","splice","divAttacks","i4","select","atk","querySelector","onchange","i8","j","otherMovesToCheck","localMoveToCheck","alert","enemyPokeDiv","yourPokeDiv","backgroundDiv","battleTextDiv","i6","battleFigure","battlePoke","infoDiv","nameDiv","hpBarPara","hpBarParaBorder","pokeLvl","hpCount","actualHp","maxHp","battleBox1","battleBox2","battleText","battleText1","battleText2","battleButton","runButton","localPP1","powerpoints","localPP2","localPP3","localPP4","localEnemyMoves","Object","values","enemyPokeMoves","randomNum","push","enemyPPArr","moveButtonDiv","moveButton","moveInfoDiv","moveInfo","moveInfoPP","outerHTML","addEventListener","mOver","mOut","localPP","randomMove","usedMove","struggle","i7","sortPP","backButton","damage_class","pp"],"version":3,"file":"index.dcb15070.js.map"}